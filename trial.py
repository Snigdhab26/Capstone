# -*- coding: utf-8 -*-
"""Trial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LstuW7H03feZT9h6JHAd550r-cWM2UdC
"""

# !pip install streamlit --user

# !pip install FPDF
# !pip install tabula-py
# !pip install fpdf
# !pip install --upgrade pandas
# !pip install reportlab
# !apt-get install poppler-utils
# ! pip install PyPDF2
# !pip install python-docx
# !pip install pywin32

# !pip install python-docx --user

# !pip install textblob --user

# !pip install transformers --user

# !pip install pymed

# !pip install dateparser

# !pip install lists

import streamlit as st
from fpdf import FPDF
from datetime import datetime
import pandas as pd
import re
import os
import docx
# from docx import Document
import PyPDF2
import requests
from bs4 import BeautifulSoup
# from textblob import TextBlob
import textblob
import transformers
from transformers import AutoTokenizer, AutoModel
from transformers import pipeline
import torch
import pymed
from pymed import PubMed
import dateparser
from io import BytesIO
import tabula as t
from tabula import read_pdf
import pandas as pd
from nltk.translate.bleu_score import sentence_bleu, SmoothingFunction
from rouge_score import rouge_scorer
from bert_score import score as bert_score
from sacrebleu import BLEU
from transformers import pipeline
from nltk.translate import meteor_score as nltk_meteor_score
import nltk
nltk.download('wordnet')
import time

PRRER_No = 'PBRER No. {}'.format('P3')
today_date = datetime.today()

import lists

import datetime
import os

import streamlit as st

import new_class

# base_path = '/mount/src/pythonproject1'
base_path = 'https://github.com/Snigdhab26/Capstone/tree/main'
os.chdir(base_path)

st.title('Aggregate Reporting Automated System (AggRAS)')

# try to make some space inbetween
st.subheader('Active Ingredient')
drug = st.selectbox('',lists.drugs,placeholder = '')

# drug = 'Allopurinol'
st.subheader('Reporting Interval')

start_date = st.text_input('start_date')
end_date = st. text_input('end_date')
st.write('Start date:', start_date)
st.write('End date:', end_date)
st.subheader('Formulations')
formulation = st.selectbox('Select the Formulation', lists.formulation,placeholder = '')

st.write(formulation)
st.subheader('Combinations')
combination = st.radio(
    'Do you wish to check for combinations',
    [':rainbow[Yes]', 'No'], index=None)

if combination == ':rainbow[Yes]':
    st.write('You selected Yes.')
else:
    st.write('You selected No.')

st.subheader('Select the Region')
Region = st.selectbox('', ('EU', 'Non-EU'))
st.write('You selected:', Region)

st.subheader('Upload documents for PSUR Preparation')
imported_files = []


with st.form("my-form2", clear_on_submit=True):
    file = st.file_uploader("Choose multiple PDF/Word file", accept_multiple_files=True,key='doc')
    submitted = st.form_submit_button("Reset")
    if submitted:
        st.cache_data.clear()
    for i, uploaded_file in enumerate(file):
        bytes_data = uploaded_file.read()
        #st.write('filename:', uploaded_file.name)
        imported_files.append(uploaded_file)
product_name = drug
st.subheader('Initiate PSUR Preparation')

# st.text(os.getcwd())
col1, col2, col3 = st.columns(3)

with col1:
    button1 =  st.button("Generate", key='GenerateButton')
with col2:
    button2 = st.button('Clear All', key='ClearAllButton')
if button1:
    # st.write('product_name',product_name)
    new_class.create_pdf(product_name, imported_files,start_date,end_date)
   
if button2:
    # Clear values from *all* all in-memory and on-disk data caches:
    # i.e. clear values from both square and cube
    st.cache_data.clear()

# streamlit run C:/Users/SNIGGDHA/Anaconda3/Lib/site-packages/ipykernel_launcher.py
